//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Managers/OldControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @OldControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @OldControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""OldControls"",
    ""maps"": [
        {
            ""name"": ""Gaim"",
            ""id"": ""efa0828c-2b21-441c-bf18-0ca810595466"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""88a10924-2c2f-425f-a7f2-3243b8a599d3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""34517096-3711-4775-b2f6-8dc70e1c9085"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""f209b32e-9b7a-4bb0-b80f-726b98807c00"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cluck"",
                    ""type"": ""Button"",
                    ""id"": ""43c615f8-0408-4633-916a-d7b06f950c76"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""cf493aae-938e-4246-893f-82753508f52e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Enable UI"",
                    ""type"": ""Button"",
                    ""id"": ""990cd544-bd04-48a9-974d-fea22ffb2778"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""afb07544-ec92-44b8-bdbc-7625a7c4a089"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""08ae4afb-728e-4408-a407-4a9acb01ff1c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5b45d5e9-d4d2-42e6-8930-32ee1a9fb364"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3e196912-d724-4fcd-9232-a28a978d047e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7b35024e-dba8-4263-afcf-3bcfac7829d4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""786ecfdc-6220-4a7f-901c-c5a56f529d96"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""345abd1f-9d65-40a5-9ad6-a33ab11a5908"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e560193e-21a5-466d-a977-fe7be110836d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5f9f2a8a-a608-444a-a04b-77e57b07f48f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ac55cdf6-3a8a-445a-aa08-184fbb25716d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""33209f5c-0ea7-4078-bec4-05dae27c0e30"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e0b3fc5b-05e5-4046-90f3-da0ddaa85440"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91f0dccf-57f8-4dc9-9bc6-18063bee2911"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d2cf41c-f672-4eeb-b565-37113388f6ab"",
                    ""path"": ""<Touchscreen>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a27fed50-173e-4c7b-9b25-ebaccdcba684"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57defa35-289f-49ff-abcf-cd47a6d9c023"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68540e3f-4d5d-422b-8170-bad20ff54cc2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cluck"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cae3189-461c-454a-a8be-7b6b0c685e6b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cluck"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57a786b9-6387-44d3-9a93-c0bb0045df5c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f72c32e1-2423-4f5d-990d-6d19cd1c5c6c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43d2975f-cbb1-4157-880e-31c7bf326140"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enable UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bae80585-c735-4110-982e-e433c8a4d148"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enable UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""1fb6087c-0582-4c10-90f5-ba0c285446c6"",
            ""actions"": [
                {
                    ""name"": ""Disable UI"",
                    ""type"": ""Button"",
                    ""id"": ""291732c9-2fc1-45cc-8d19-745c04dd9e1b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0e1e81bf-d2ca-44ad-8ecb-3caf5d959f8d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Disable UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dae89e0c-ed60-4202-b9b4-318d5d9a1752"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Disable UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gaim
        m_Gaim = asset.FindActionMap("Gaim", throwIfNotFound: true);
        m_Gaim_Move = m_Gaim.FindAction("Move", throwIfNotFound: true);
        m_Gaim_Look = m_Gaim.FindAction("Look", throwIfNotFound: true);
        m_Gaim_Dash = m_Gaim.FindAction("Dash", throwIfNotFound: true);
        m_Gaim_Cluck = m_Gaim.FindAction("Cluck", throwIfNotFound: true);
        m_Gaim_Jump = m_Gaim.FindAction("Jump", throwIfNotFound: true);
        m_Gaim_EnableUI = m_Gaim.FindAction("Enable UI", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_DisableUI = m_UI.FindAction("Disable UI", throwIfNotFound: true);
    }

    ~@OldControls()
    {
        UnityEngine.Debug.Assert(!m_Gaim.enabled, "This will cause a leak and performance issues, OldControls.Gaim.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, OldControls.UI.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gaim
    private readonly InputActionMap m_Gaim;
    private List<IGaimActions> m_GaimActionsCallbackInterfaces = new List<IGaimActions>();
    private readonly InputAction m_Gaim_Move;
    private readonly InputAction m_Gaim_Look;
    private readonly InputAction m_Gaim_Dash;
    private readonly InputAction m_Gaim_Cluck;
    private readonly InputAction m_Gaim_Jump;
    private readonly InputAction m_Gaim_EnableUI;
    public struct GaimActions
    {
        private @OldControls m_Wrapper;
        public GaimActions(@OldControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Gaim_Move;
        public InputAction @Look => m_Wrapper.m_Gaim_Look;
        public InputAction @Dash => m_Wrapper.m_Gaim_Dash;
        public InputAction @Cluck => m_Wrapper.m_Gaim_Cluck;
        public InputAction @Jump => m_Wrapper.m_Gaim_Jump;
        public InputAction @EnableUI => m_Wrapper.m_Gaim_EnableUI;
        public InputActionMap Get() { return m_Wrapper.m_Gaim; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GaimActions set) { return set.Get(); }
        public void AddCallbacks(IGaimActions instance)
        {
            if (instance == null || m_Wrapper.m_GaimActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GaimActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Cluck.started += instance.OnCluck;
            @Cluck.performed += instance.OnCluck;
            @Cluck.canceled += instance.OnCluck;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @EnableUI.started += instance.OnEnableUI;
            @EnableUI.performed += instance.OnEnableUI;
            @EnableUI.canceled += instance.OnEnableUI;
        }

        private void UnregisterCallbacks(IGaimActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Cluck.started -= instance.OnCluck;
            @Cluck.performed -= instance.OnCluck;
            @Cluck.canceled -= instance.OnCluck;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @EnableUI.started -= instance.OnEnableUI;
            @EnableUI.performed -= instance.OnEnableUI;
            @EnableUI.canceled -= instance.OnEnableUI;
        }

        public void RemoveCallbacks(IGaimActions instance)
        {
            if (m_Wrapper.m_GaimActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGaimActions instance)
        {
            foreach (var item in m_Wrapper.m_GaimActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GaimActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GaimActions @Gaim => new GaimActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_DisableUI;
    public struct UIActions
    {
        private @OldControls m_Wrapper;
        public UIActions(@OldControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @DisableUI => m_Wrapper.m_UI_DisableUI;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @DisableUI.started += instance.OnDisableUI;
            @DisableUI.performed += instance.OnDisableUI;
            @DisableUI.canceled += instance.OnDisableUI;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @DisableUI.started -= instance.OnDisableUI;
            @DisableUI.performed -= instance.OnDisableUI;
            @DisableUI.canceled -= instance.OnDisableUI;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IGaimActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnCluck(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnEnableUI(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnDisableUI(InputAction.CallbackContext context);
    }
}
